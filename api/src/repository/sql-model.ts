/*
 * This file was generated by a tool.
 * Rerun sql-ts to regenerate this file.
 */
export interface cc_cedict {
  id?: string;
  simplified: string;
  traditional: string;
  pinyin: string;
  definitions: string[];
}
export interface cc_cedict_definition {
  cc_cedict_id: string;
  definition_meaning: string;
}
export interface corpus {
  title: string;
  licence: string;
  website: string;
  summary: string;
}
export interface document {
  id?: string;
  sub_corpus_title: string;
  corpus_title: string;
  previous_document: string | null;
  english: string | null;
  chinese: string;
  n_non_punct: number;
}
export interface listen_log {
  date_time: Date;
  student_id: string;
  understood: boolean;
  sentence_word_id: number;
  sentence_id: string;
}
export interface named_entity {
  id?: string;
  chinese: string;
  entity_type: string;
  start_char: number;
  end_char: number;
  document_id: string;
}
export interface read_log {
  date_time: Date;
  student_id: string;
  understood: boolean;
  sentence_word_id: number;
  sentence_id: string;
}
export interface sentence {
  id?: string;
  document_id: string;
  document_index: number;
  chinese: string;
  sentiment: string;
}
export interface sentence_word {
  stanza_id: number;
  sentence_id: string;
  document_id: string;
  word_hanzi: string;
  lemma: string;
  part_of_speech: string;
  universal_part_of_speech: string;
  head: number;
  deprel: string;
  feats: any;
  start_char: number;
  end_char: number;
  ner: string;
  named_entity_id: string | null;
}
export interface student {
  id?: string;
  first_name: string;
  last_name: string;
}
export interface student_document {
  student_id: string;
  document_id: string;
  marked_as_bad: boolean;
}
export interface student_document_listen {
  student_id: string;
  document_id: string;
  listen_count: number;
  last_listened: Date | null;
}
export interface student_document_read {
  student_id: string;
  document_id: string;
  read_count: number;
  last_read: Date | null;
}
export interface student_word {
  student_id: string;
  word_hanzi: string;
  locked: boolean;
  date_last_unlocked: Date | null;
  learning: learning_state;
  date_learned: Date | null;
  tags?: string[];
  position: number;
  due: Date | null;
}
export interface student_word_listen {
  student_id: string;
  word_hanzi: string;
  f1: number;
  f2: number;
  due: Date;
  previous: Date;
  understood: any;
  understood_count: number;
  understood_distinct_documents_count: number;
}
export interface student_word_read {
  student_id: string;
  word_hanzi: string;
  f1: number;
  f2: number;
  due: Date;
  previous: Date;
  understood: any;
  understood_count: number;
  understood_distinct_documents_count: number;
}
export interface sub_corpus {
  title: string;
  corpus_title: string;
  summary: string;
}
export interface time_testing {
  due: Date;
  id?: number;
}
export interface word {
  hanzi: string;
  hsk_word_2010: number | null;
  hsk_char_2010: number | null;
}
export enum learning_state {
  not_yet_learned = 'not_yet_learned',
  meaning = 'meaning',
  pronunciation = 'pronunciation',
  reading = 'reading',
  learned = 'learned',
}
