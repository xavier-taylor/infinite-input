-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE mandarin.cc_cedict
(
    id bigserial,
    simplified text NOT NULL,
    traditional text NOT NULL,
    pinyin text NOT NULL,
    definitions text[] NOT NULL,
    PRIMARY KEY (id)
);

COMMENT ON TABLE mandarin.cc_cedict
    IS 'Represents an entry in the https://cc-cedict.org/wiki/start dictionary. Note that in this table the simplfied or traditional values are not unique - there can be entries with the same string of chinese characters. It is possible that the pinyin and the simplified+trad would be a composite key, but not sure about that, so just using an id. ';

COMMENT ON COLUMN mandarin.cc_cedict.definitions
    IS 'This is redundant data, the definitions are stored in the definition table. I am just including it so I can compare query times against the joined data, in future I will probably delete this once I confirm that I am not paying a cost at query time for normalizing the definitions.';

CREATE TABLE mandarin.word
(
    hanzi text,
    hsk_word_2010 integer NOT NULL,
    hsk_char_2010 integer NOT NULL,
    PRIMARY KEY (hanzi)
);

COMMENT ON TABLE mandarin.word
    IS 'Represents a string of hanzi(traditional or simplified) and or alphanumeric characters that constitutes a word in Chinese. ';

COMMENT ON COLUMN mandarin.word.hsk_word_2010
    IS 'In range [1,7], 7 denotes not in hsk. This denotes the first level where this word appeared as a hsk word. So for example, 朋友 would appear as 1, but 朋 友 would each be some other level (maybe 7), because as single character words, they are not part of HSK 1';

COMMENT ON COLUMN mandarin.word.hsk_char_2010
    IS 'In range [1,7] where 7 denotes not appearing in HSK. This is the first level where all the charactes in this word had appeared (by this or previous levels). So for some word ABC where A appeared in level 1, B appeared in level two (as part of some word BD) and C appeared at level 3, we would have the value 3. Hsk level 1 has 174 distinct characters, so to find the hsk level 1 characters you would select * from word where hsk_char_2010 =1 && length(hanz)=1.';

CREATE TABLE mandarin.definition
(
    meaning text,
    PRIMARY KEY (meaning)
);

COMMENT ON TABLE mandarin.definition
    IS 'This represents an english definition of a word. It can be a single word, ie ''bread'', or ''to betray'' or something arbitrarily complex ie ''simultaneous interpretation facilities (loanword from "earphone")'' or ''variant of 警戒[jing3 jie4]/''. It represents unstructured data, but often enough the definitions of a word (initially in CC-CEDICT) will match, so this table allows us to (in a naive way) find at least some synonyms via common english definition.';

CREATE TABLE mandarin.cc_cedict_definition
(
    cc_cedict_id bigserial,
    definition_meaning text
);

COMMENT ON TABLE mandarin.cc_cedict_definition
    IS 'This is a curious join table... because the table ''definition'' only has one column, its natural key. So, absent other columns coming later, it seems like this special case of a many to many could be served with just the join table... without the table being joined to...';

CREATE TABLE mandarin."user"
(
    first_name text NOT NULL,
    last_name text NOT NULL,
    id bigserial,
    PRIMARY KEY (id)
);

CREATE TABLE mandarin.user_word_listen
(
    user_id bigserial,
    word_hanzi text,
    f1 bigint NOT NULL,
    f2 bigint NOT NULL,
    due date NOT NULL,
    understood date[] NOT NULL,
    forgot date[] NOT NULL
);

COMMENT ON COLUMN mandarin.user_word_listen.f1
    IS 'use in recurrence to calculate next due date (currently thinking of using fib sequence)';

COMMENT ON COLUMN mandarin.user_word_listen.understood
    IS 'number of times person has seen this word';

CREATE TABLE mandarin.user_word_read
(
    user_id bigserial,
    word_hanzi text,
    f1 bigint NOT NULL,
    f2 bigint NOT NULL,
    due date NOT NULL,
    understood date[] NOT NULL,
    forgot date[] NOT NULL
);

CREATE TABLE mandarin.sentence
(
    id bigserial,
    english text NOT NULL,
    chinese text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE mandarin.user_sentence_read
(
    user_id bigserial,
    sentence_id bigserial,
    count integer NOT NULL
);

CREATE TABLE mandarin.user_sentence_listen
(
    user_id bigserial,
    sentence_id bigserial,
    count integer NOT NULL
);

CREATE TABLE mandarin.sentence_word
(
    sentence_id bigserial,
    word_hanzi text,
    part_of_speech text
);

ALTER TABLE mandarin.cc_cedict
    ADD FOREIGN KEY (traditional)
    REFERENCES mandarin.word (hanzi)
    NOT VALID;


ALTER TABLE mandarin.cc_cedict
    ADD FOREIGN KEY (simplified)
    REFERENCES mandarin.word (hanzi)
    NOT VALID;


ALTER TABLE mandarin.cc_cedict_definition
    ADD FOREIGN KEY (cc_cedict_id)
    REFERENCES mandarin.cc_cedict (id)
    NOT VALID;


ALTER TABLE mandarin.cc_cedict_definition
    ADD FOREIGN KEY (definition_meaning)
    REFERENCES mandarin.definition (meaning)
    NOT VALID;


ALTER TABLE mandarin.user_word_listen
    ADD FOREIGN KEY (user_id)
    REFERENCES mandarin."user" (id)
    NOT VALID;


ALTER TABLE mandarin.user_word_listen
    ADD FOREIGN KEY (word_hanzi)
    REFERENCES mandarin.word (hanzi)
    NOT VALID;


ALTER TABLE mandarin.user_word_read
    ADD FOREIGN KEY (user_id)
    REFERENCES mandarin."user" (id)
    NOT VALID;


ALTER TABLE mandarin.user_word_read
    ADD FOREIGN KEY (word_hanzi)
    REFERENCES mandarin.word (hanzi)
    NOT VALID;


ALTER TABLE mandarin.user_sentence_read
    ADD FOREIGN KEY (user_id)
    REFERENCES mandarin."user" (id)
    NOT VALID;


ALTER TABLE mandarin.user_sentence_read
    ADD FOREIGN KEY (sentence_id)
    REFERENCES mandarin.sentence (id)
    NOT VALID;


ALTER TABLE mandarin.user_sentence_listen
    ADD FOREIGN KEY (user_id)
    REFERENCES mandarin."user" (id)
    NOT VALID;


ALTER TABLE mandarin.user_sentence_listen
    ADD FOREIGN KEY (sentence_id)
    REFERENCES mandarin.sentence (id)
    NOT VALID;


ALTER TABLE mandarin.sentence_word
    ADD FOREIGN KEY (sentence_id)
    REFERENCES mandarin.sentence (id)
    NOT VALID;


ALTER TABLE mandarin.sentence_word
    ADD FOREIGN KEY (word_hanzi)
    REFERENCES mandarin.word (hanzi)
    NOT VALID;

END;